( print-num 15)
( print-bool #t )
(print-num  ( + 7 5) )
(print-num  ( - 7 5) )
(print-num  ( * 100 5) )
(print-num  ( / 100 5) )
(print-num  ( mod 13 5) )
(print-bool  ( > 13 5) )
(print-bool  ( < 13 5) )
(print-bool  ( = 5 5) )
(print-bool  ( = 5 ( + 3 2) ) )
(print-bool  ( = 5 ( + 3 3) ) )
(print-bool (and (> 2 1) (> 2 1)))
(print-bool (not(> 2 2)))
(print-bool (or (> 2 1) (> 2 1)))
(print-num 10000)
(print-bool (or #t #f))
(print-bool (and #t #f))
(print-num 20000)
(define x 5)
(define y 7)
(print-num x)
(print-num y)
(print-num (+ x y))
(define t1 #t)
(define t2 #f)
(print-bool (and t1 t2))
(print-bool (or t1 t2))
(define x 1)
(print-num x)
(print-bool (or #f #f #f))
(print-bool (or #t #f #f))
(print-bool (or #f #f #t))
(print-bool (or #f #t #f))
(print-bool (and #f #f #f))
(print-bool (and #t #f #f))
(print-bool (and #f #f #t))
(print-bool (and #f #t #f))
(print-bool (and #t #t #t))
(print-bool (and #t #f #f #t))
(print-bool (and #t (not #f) (or #f #t) (and #t (not #t))))